import { jsx as l } from "react/jsx-runtime";
import { useState as f, useCallback as R, useEffect as x } from "react";
import { m as C, g as F } from "./BaseSpinner-NHLIzqRl.js";
import { g as j, I as k } from "./ItemDisplayer-Rq59TvwJ.js";
const M = ({ url: u, token: m = void 0, headers: c = void 0, delay: n = 0, enterAnimation: g = void 0, framerMotionProps: p = void 0, imageStyle: h = void 0, spinner: y = {}, onDownload: b = () => {
}, onLoad: i = () => {
}, onError: e = () => {
}, consoleError: t = !1 }) => {
  const [w, D] = f(), [I, o] = f(!1), d = R(async () => {
    try {
      const a = await fetch(u, {
        headers: j(c, m)
      });
      if (a.status === 200) {
        b();
        const s = new FileReader();
        s.onload = () => {
          D(s.result);
        }, s.onerror = () => {
          t && console.log("Reader error"), e();
        };
        const r = await a.blob();
        if (!r.type.includes("image")) {
          t && console.log("Not an image!"), e();
          return;
        }
        s.readAsDataURL(r), n ? setTimeout(() => {
          i(), o(!0);
        }, n) : (i(), o(!0));
      } else
        t && console.log("Could not fetch image!"), e();
    } catch (a) {
      t && console.log(a), e();
    }
  }, []);
  return x(() => {
    d();
  }, [d]), l(k, { loaded: I, spinner: y, children: l(C.img, { src: w, style: { width: "100%", height: "auto", margin: 0, ...h }, ...F(g, p) }) });
};
export {
  k as ItemDisplayer,
  M as default
};
