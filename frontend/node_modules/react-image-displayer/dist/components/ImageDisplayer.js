import { jsx as m } from "react/jsx-runtime";
import { useState as c, useCallback as I, useEffect as R } from "react";
import { m as x, g as C } from "../BaseSpinner-NHLIzqRl.js";
import { g as F, I as j } from "../ItemDisplayer-Rq59TvwJ.js";
const L = ({
  url: n,
  token: g = void 0,
  headers: f = void 0,
  delay: a = 0,
  enterAnimation: u = void 0,
  framerMotionProps: p = void 0,
  imageStyle: h = void 0,
  spinner: v = {},
  onDownload: y = () => {
  },
  onLoad: i = () => {
  },
  onError: e = () => {
  },
  consoleError: t = !1
}) => {
  const [b, w] = c(), [D, r] = c(!1), l = I(async () => {
    try {
      const o = await fetch(n, {
        headers: F(f, g)
      });
      if (o.status === 200) {
        y();
        const s = new FileReader();
        s.onload = () => {
          w(s.result);
        }, s.onerror = () => {
          t && console.log("Reader error"), e();
        };
        const d = await o.blob();
        if (!d.type.includes("image")) {
          t && console.log("Not an image!"), e();
          return;
        }
        s.readAsDataURL(d), a ? setTimeout(() => {
          i(), r(!0);
        }, a) : (i(), r(!0));
      } else
        t && console.log("Could not fetch image!"), e();
    } catch (o) {
      t && console.log(o), e();
    }
  }, []);
  return R(() => {
    l();
  }, [l]), /* @__PURE__ */ m(j, { loaded: D, spinner: v, children: /* @__PURE__ */ m(
    x.img,
    {
      src: b,
      style: { width: "100%", height: "auto", margin: 0, ...h },
      ...C(u, p)
    }
  ) });
};
export {
  L as ImageDisplayer
};
