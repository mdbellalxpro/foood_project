import { LazyProps, MotionProps, LayoutProps, AnimationProps, DraggableProps, MotionConfigProps, MotionAdvancedProps, AnimatePresenceProps, ScrapeMotionValuesFromProps, Variants } from 'framer-motion';
export type FramerMotionProps = LazyProps | MotionProps | LayoutProps | AnimationProps | DraggableProps | MotionConfigProps | MotionAdvancedProps | AnimatePresenceProps | ScrapeMotionValuesFromProps | Variants;
export type EnterAnimation = 'scale' | 'fullscale' | 'fade' | 'blur' | 'left' | 'right' | 'top' | 'bottom' | 'fullleft' | 'fullright' | 'fulltop' | 'fullbottom' | 'none';
export type AnimationDuration = number;
export declare const getFramerMotionProps: (animation: [EnterAnimation, AnimationDuration] | undefined, framerMotionProps?: FramerMotionProps) => LazyProps | AnimationProps | LayoutProps | DraggableProps | MotionConfigProps | MotionAdvancedProps | AnimatePresenceProps | ScrapeMotionValuesFromProps | Variants | {
    initial: {
        opacity: number;
        scale: number;
        filter?: undefined;
        x?: undefined;
        y?: undefined;
    };
    animate: {
        opacity: number;
        scale: number;
        filter?: undefined;
        x?: undefined;
        y?: undefined;
    };
    transition: {
        duration: number;
    };
} | {
    initial: {
        opacity: number;
        scale?: undefined;
        filter?: undefined;
        x?: undefined;
        y?: undefined;
    };
    animate: {
        opacity: number;
        scale?: undefined;
        filter?: undefined;
        x?: undefined;
        y?: undefined;
    };
    transition: {
        duration: number;
    };
} | {
    initial: {
        opacity: number;
        filter: string;
        scale?: undefined;
        x?: undefined;
        y?: undefined;
    };
    animate: {
        opacity: number;
        filter: string;
        scale?: undefined;
        x?: undefined;
        y?: undefined;
    };
    transition: {
        duration: number;
    };
} | {
    initial: {
        x: string;
        opacity?: undefined;
        scale?: undefined;
        filter?: undefined;
        y?: undefined;
    };
    animate: {
        x: number;
        opacity?: undefined;
        scale?: undefined;
        filter?: undefined;
        y?: undefined;
    };
    transition: {
        duration: number;
    };
} | {
    initial: {
        y: string;
        opacity?: undefined;
        scale?: undefined;
        filter?: undefined;
        x?: undefined;
    };
    animate: {
        y: number;
        opacity?: undefined;
        scale?: undefined;
        filter?: undefined;
        x?: undefined;
    };
    transition: {
        duration: number;
    };
};
//# sourceMappingURL=enterAnimation.d.ts.map